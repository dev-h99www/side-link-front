name: React-server CD

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/side-link-front
  VERSION: ${{ github.sha }}
  NAME: side-link-front
  BUILD_PATH: /home/runner/work/side-link-front/side-link-front

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: List root directory
        run: ls -al ${{ github.workspace }}

      - name: List project directory
        run: ls -al ${{ env.BUILD_PATH }}

      - name: List src directory
        run: ls -al ${{ env.BUILD_PATH }}/src

      - name: Check if public directory exists
        run: if [ -d "${{ env.BUILD_PATH }}/public" ]; then echo "Public directory exists"; else mkdir ${{ env.BUILD_PATH }}/public; fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'

      - run: npm install
        working-directory: ${{ env.BUILD_PATH }}

      - run: npm install react-scripts
        working-directory: ${{ env.BUILD_PATH }}

      - run: npm run build
        working-directory: ${{ env.BUILD_PATH }}

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, react-server ]

    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 80:80 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest
